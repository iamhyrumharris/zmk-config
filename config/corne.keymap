#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <16 19>;
        };

        lparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <1 3>;
        };

        rparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <10 8>;
        };

        lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 4>;
        };

        rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 7>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <38 27>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <38 28>;
        };

        undo {
            bindings = <&kp LG(Z)>;
            key-positions = <38 25>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <38 26>;
        };
    };

    behaviors {
        paraenthesis: paraenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "PARAENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp LEFT_PARENTHESIS>;
        };

        Rparenthesis: Rparenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "RPARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp RIGHT_PARENTHESIS>;
        };

        lbracket: lbracket {
            compatible = "zmk,behavior-tap-dance";
            label = "LBRACKET";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LEFT_BRACKET>;
        };

        rbracket: rbracket {
            compatible = "zmk,behavior-tap-dance";
            label = "RBRACKET";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp RIGHT_BRACKET>;
        };

        LeftScreen: LeftScreen {
            compatible = "zmk,behavior-caps-word";
            label = "LEFTSCREEN";
            #binding-cells = <0>;
            continue-list = <D>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E           &kp R    &kp T        &kp Y          &kp U  &kp I                    &kp O    &kp P     &kp ESC
&kp LCTRL  &kp A  &kp S  &kp D           &lt 3 F  &kp G        &kp H          &kp J  &kp K                    &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &mt CAPSLOCK C  &kp V    &kp B        &kp N          &kp M  &kp COMMA                &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                         &kp LGUI        &mo 1    &kp SPACE    &kp BACKSPACE  &mo 2  &mt LEFT_ALT LS(LG(N9))
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp LS(TAB)     &kp LS(LA(LC(LG(N1))))  &kp LS(LA(LC(LG(N2))))  &kp LS(LA(LC(LG(N3))))  &kp LS(LA(LC(LG(N4))))  &kp LA(LS(LC(LG(N5))))    &kp N6      &kp BACKSPACE      &kp UP_ARROW      &kp DELETE       &kp N0  &kp C_VOLUME_UP
&bt BT_CLR_ALL  &kp F8                  &kp F9                  &kp F10                 &kp F11                 &kp F12                   &kp INSERT  &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW  &trans  &kp C_VOLUME_DOWN
&kp LSHFT       &bt BT_SEL 0            &bt BT_SEL 1            &bt BT_SEL 2            &bt BT_SEL 3            &bt BT_SEL 4              &trans      &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans  &kp LS(LG(N8))
                                                                &kp LGUI                &trans                  &kp SPACE                 &kp DELETE  &kp LA(BACKSPACE)  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp LS(TAB)  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL    &trans    &trans  &trans    &kp LT    &kp GT       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                               &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans            &trans  &trans  &trans            &trans  &trans    &kp KP_ASTERISK  &kp N7        &kp N8      &kp N9  &kp KP_SUBTRACT  &trans
&kp LEFT_CONTROL  &trans  &trans  &trans            &trans  &trans    &kp KP_DIVIDE    &kp N4        &kp N5      &kp N6  &kp PLUS         &kp EQUAL
&kp LEFT_SHIFT    &trans  &trans  &trans            &trans  &trans    &trans           &kp N1        &kp N2      &kp N3  &kp PERIOD       &kp ENTER
                                  &kp LEFT_COMMAND  &trans  &trans    &kp BACKSPACE    &kp NUMBER_0  &kp PERIOD
            >;
        };
    };
};
